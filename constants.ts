import type { SearchSettings, Prompts } from './types';
import { v4 as uuidv4 } from 'uuid';

export const DEFAULT_RESUME = `
# Имя Фамилия
Город

## Контакты
- Телефон: +7(000)000-00-00
- Email: your.email@example.com
- Telegram: @your_telegram

## Ключевые компетенции
- **Управление:** Опыт руководства командами и проектами.
- **Технологии:** Глубокое понимание [ваша сфера], опыт работы с [ключевые технологии].
- **Бизнес:** Развитие бизнеса, переговоры, бюджетирование.
- **Аналитика:** Анализ данных, принятие решений на основе метрик.

## Опыт работы

**Последняя Должность, Название Компании** | Город | Годы работы
- Ключевое достижение 1.
- Ключевое достижение 2.
- Описание обязанностей и использованных технологий.

**Предыдущая Должность, Название Компании** | Город | Годы работы
- Ключевое достижение 1.
- Ключевое достижение 2.
- Описание обязанностей.
`;

export const DEFAULT_SEARCH_SETTINGS: SearchSettings = {
    positions: 'Руководитель проекта, Product Manager',
    salary: 150000,
    currency: 'RUB',
    location: 'Москва',
    remote: true,
    employment: ['полная занятость', 'проектная работа'],
    schedule: ['полный день', 'гибкий график'],
    skills: 'управление проектами, agile, scrum, product management, team leadership',
    keywords: 'SaaS, FinTech',
    minCompanyRating: 3.5,
    limit: 10,
    platforms: [
        { id: uuidv4(), name: 'HeadHunter', url: 'https://hh.ru/search/vacancy', enabled: true },
    ]
};

export const DEFAULT_PROMPTS: Prompts = {
    jobSearch: `
# ЗАДАЧА: ИЗВЛЕЧЕНИЕ ДАННЫХ О ВАКАНСИЯХ ИЗ HTML
Ты — AI-парсер, твоя задача — извлечь структурированную информацию о вакансиях из предоставленного HTML-кода страницы.

# ВХОДНЫЕ ДАННЫЕ:
1.  **HTML-код:** HTML страницы с результатами поиска вакансий.

# ИНСТРУКЦИИ:
1.  **Найди карточки вакансий:** Внимательно изучи HTML-структуру. Каждая вакансия обычно находится внутри div-контейнера с классом вроде 'vacancy-card--z_UXteNo7bRGzxreB0_I' или 'vacancy-item--main'.
2.  **Извлеки данные для каждой вакансии:**
    *   **title:** Название вакансии.
    *   **company:** Название компании.
    *   **salary:** Зарплата. Если не указана, верни "не указана".
    *   **location:** Город или регион.
    *   **description:** Краткое описание или требования.
    *   **url:** Полная, абсолютная ссылка на вакансию.
    *   **contacts:** Постарайся найти контактные данные (email, phone, telegram). Если нет, не включай это поле.
    *   **companyRating:** Оставь 0.
    *   **companyReviewSummary:** Оставь пустой строкой.
    *   **responsibilities:** Оставь пустым массивом [].
    *   **requirements:** Оставь пустым массивом [].
3.  **Сформируй JSON:** Верни результат в виде JSON-массива объектов. Каждый объект должен соответствовать структуре вакансии. Не включай вакансии без названия или ссылки. Ограничь результат {limit} вакансиями.
    
# ВАЖНО:
-   **Точность:** Извлекай текст как есть.
-   **Формат:** Вывод должен быть СТРОГО JSON-массивом, без комментариев или \`\`\`json ... \`\`\` оберток.
-   **Ошибки:** Если HTML не содержит вакансий, верни пустой массив \`[]\`.
`,
    resumeAdapt: `Адаптируй предоставленное базовое резюме, чтобы оно идеально соответствовало требованиям указанной вакансии.
Перепиши разделы "Ключевые компетенции" и "Опыт работы", чтобы подчеркнуть наиболее релевантные навыки и достижения для этой конкретной роли.
Результат должен быть в формате Markdown, кратким, профессиональным и не длиннее одной страницы.
Сохрани контактную информацию кандидата.
В конце добавь сноску: "--- Адаптировано с помощью ИИ для роли {jobTitle} в {jobCompany} ---".`,
    coverLetter: `Напиши профессиональное и краткое сопроводительное письмо от имени кандидата на должность "{jobTitle}" в компанию "{jobCompany}".
Тон должен быть уверенным и располагающим.
Сошлись на ключевые требования из описания вакансии и кратко свяжи их с опытом кандидата из резюме.
Результат верни СТРОГО в формате JSON-объекта со следующими ключами:
{
  "subject": "Отклик на вакансию: {jobTitle}",
  "body": "Полный текст письма, готовый к отправке. Начинай с 'Здравствуйте,'."
}
Не добавляй никаких комментариев или markdown-оберток.`,
    hrResponseAnalysis: `
# ЗАДАЧА: АНАЛИЗ ОТВЕТА ОТ HR
Ты — AI-ассистент, который помогает соискателю понять суть ответа от рекрутера.
Проанализируй предоставленный текст письма от HR.
Твоя задача — определить статус коммуникации и вернуть ОДНО из следующих ключевых слов: 'interview', 'offer', 'archive' (для отказа), или 'tracking' (для нейтральных ответов или запросов доп. информации).

# ПРИМЕРЫ:
- "Спасибо за отклик! Хотим пригласить вас на собеседование..." -> верни "interview"
- "Мы рассмотрели ваше резюме и готовы сделать вам предложение..." -> верни "offer"
- "К сожалению, на данный момент мы не готовы двигаться дальше..." -> верни "archive"
- "Благодарим за интерес. Мы вернемся к вам, как только..." -> верни "tracking"
- "Не могли бы вы прислать ваше портфолио?" -> верни "tracking"

# ВАЖНО:
- Верни ТОЛЬКО ОДНО ключевое слово и ничего больше. Без объяснений и форматирования.

# ТЕКСТ ПИСЬМА ДЛЯ АНАЛИЗА:
`,
    shortMessage: `Сгенерируй ОЧЕНЬ короткое (2-3 предложения), вежливое и профессиональное сообщение для первого контакта с HR в мессенджере (WhatsApp/Telegram) по поводу вакансии "{jobTitle}" в компании "{jobCompany}".
Сообщение должно быть от имени кандидата {candidateName}.
Пример: "Добрый день! Меня зовут {candidateName}. Я нашел вашу вакансию '{jobTitle}' на hh.ru и хотел бы выразить свою заинтересованность. Мое резюме во вложении. Буду рад ответить на ваши вопросы."
Верни только текст сообщения, без приветствий типа "Вот сообщение:" и без кавычек.`,
    emailJobMatch: `
# ЗАДАЧА: СОПОСТАВЛЕНИЕ EMAIL С ВАКАНСИЕЙ
Ты — AI-ассистент, который помогает найти, к какой из отслеживаемых вакансий относится входящее письмо от HR.
Проанализируй текст письма и сравни его с предоставленным списком вакансий.
Определи наиболее подходящую вакансию по названию компании, должности и контексту письма.

# ВХОДНЫЕ ДАННЫЕ:
1.  **Текст письма:** Полный текст email от HR.
2.  **Список вакансий:** JSON-массив с объектами вакансий, за которыми следит пользователь.

# ИНСТРУКЦИИ:
Верни **ТОЛЬКО ID** наиболее подходящей вакансии из списка.
Например: "7a8c1a2e-4b5c-6d7e-8f9a-0b1c2d3e4f5a"

# ВАЖНО:
-   Не возвращай ничего, кроме ID. Без JSON, без объяснений, без комментариев.
-   Если ты абсолютно не уверен или не можешь найти совпадение, верни слово "UNKNOWN".
`,
};


export enum AppStatus {
    Idle = 'idle',
    Loading = 'loading',
    Success = 'success',
    Error = 'error',
}